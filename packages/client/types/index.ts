/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/p1/clear-notify': {
    /**
     * 标记通知为已读
     * @description 标记通知为已读
     *
     * 不传id时会清空所有未读通知
     */
    post: operations['clearNotice'];
  };
  '/p1/groups/-/posts/{postID}': {
    get: operations['getGroupPost'];
    put: operations['editGroupPost'];
    delete: operations['deleteGroupPost'];
  };
  '/p1/groups/-/topics/{id}': {
    /** @description 获取帖子列表 */
    get: operations['getGroupTopicDetail'];
  };
  '/p1/groups/-/topics/{topicID}': {
    put: operations['editGroupTopic'];
  };
  '/p1/groups/-/topics/{topicID}/replies': {
    post: operations['createGroupReply'];
  };
  '/p1/groups/{groupName}/members': {
    /** @description 获取帖子列表 */
    get: operations['listGroupMembersByName'];
  };
  '/p1/groups/{groupName}/profile': {
    /** @description 获取小组首页 */
    get: operations['getGroupProfile'];
  };
  '/p1/groups/{groupName}/topics': {
    /** @description 获取帖子列表 */
    get: operations['getGroupTopicsByGroupName'];
    post: operations['createNewGroupTopic'];
  };
  '/p1/login': {
    /**
     * @description 需要 [turnstile](https://developers.cloudflare.com/turnstile/get-started/client-side-rendering/)
     *
     * next.bgm.tv 域名对应的 site-key 为 `0x4AAAAAAABkMYinukE8nzYS`
     *
     * dev.bgm38.com 域名使用测试用的 site-key `1x00000000000000000000AA`
     */
    post: operations['login'];
  };
  '/p1/login2': {
    /**
     * @deprecated
     * @description backward compatibility for #login operator
     */
    post: operations['login2'];
  };
  '/p1/logout': {
    /** @description 登出 */
    post: operations['logout'];
  };
  '/p1/me': {
    get: operations['getCurrentUser'];
  };
  '/p1/notify': {
    /** 获取未读通知 */
    get: operations['listNotice'];
  };
  '/p1/subjects/{subjectID}/topics': {
    /** @description 获取帖子列表 */
    get: operations['getSubjectTopicsBySubjectId'];
  };
  '/p1/wiki/subjects/{subjectID}': {
    /**
     * @description 获取当前的 wiki 信息
     *
     * 暂时只能修改沙盒条目 184017, 309445, 354667, 354677, 363612
     */
    get: operations['subjectInfo'];
    /**
     * @description 暂时只能修改沙盒条目 184017,309445,354667,354677,363612
     *
     * 需要 `subjectWikiEdit` 权限
     */
    put: operations['putSubjectInfo'];
    /** @description 暂时只能修改沙盒条目 184017,309445,354667,354677,363612 */
    patch: operations['patchSubjectInfo'];
  };
  '/p1/wiki/subjects/{subjectID}/covers': {
    get: operations['listSubjectCovers'];
    /** @description 需要 `subjectWikiEdit` 权限 */
    post: operations['uploadSubjectCover'];
  };
  '/p1/wiki/subjects/{subjectID}/covers/{imageID}/vote': {
    /**
     * 为条目封面投票
     * @description 需要 `subjectWikiEdit` 权限
     */
    post: operations['voteSubjectCover'];
    /**
     * 撤消条目封面投票
     * @description 需要 `subjectWikiEdit` 权限
     */
    delete: operations['unvoteSubjectCover'];
  };
  '/p1/wiki/subjects/{subjectID}/history-summary': {
    /**
     * @description 获取当前的 wiki 信息
     *
     * 暂时只能修改沙盒条目 184017, 309445, 354667, 354677, 363612
     */
    get: operations['subjectEditHistorySummary'];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Avatar */
    Avatar: {
      large: string;
      medium: string;
      small: string;
    };
    BasicReply: {
      createdAt: number;
      creator: components['schemas']['User'];
      id: number;
      state: number;
      text: string;
    };
    CurrentUser: {
      /** Avatar */
      avatar: {
        large: string;
        medium: string;
        small: string;
      };
      id: number;
      nickname: string;
      permission: {
        subjectWikiEdit: boolean;
      };
      sign: string;
      user_group: number;
      username: string;
    };
    /** @description fastify default error response */
    Error: {
      code: string;
      error: string;
      message: string;
      statusCode: number;
    };
    Group: {
      createdAt: number;
      description: string;
      icon: string;
      id: number;
      name: string;
      nsfw: boolean;
      title: string;
      totalMembers: number;
    };
    GroupMember: {
      /** Avatar */
      avatar: {
        large: string;
        medium: string;
        small: string;
      };
      id: number;
      joinedAt: number;
      nickname: string;
      username: string;
    };
    GroupProfile: {
      group: components['schemas']['Group'];
      /** @description 是否已经加入小组 */
      inGroup: boolean;
      recentAddedMembers: components['schemas']['GroupMember'][];
      topics: components['schemas']['Topic'][];
      totalTopics: number;
    };
    GroupReply: {
      createdAt: number;
      creator: components['schemas']['User'];
      id: number;
      state: number;
      text: string;
      topicID: number;
    };
    HistorySummary: {
      commitMessage: string;
      /** @description unix timestamp seconds */
      createdAt: number;
      creator: {
        username: string;
      };
      /** @description 修改类型。`1` 正常修改， `11` 合并，`103` 锁定/解锁 `104` 未知 */
      type: number;
    };
    LoginRequestBody: {
      'cf-turnstile-response': string;
      email: string;
      password: string;
    };
    Notice: {
      /** @description unix timestamp in seconds */
      createdAt: number;
      id: number;
      postID: number;
      /** User */
      sender: {
        /** Avatar */
        avatar: {
          large: string;
          medium: string;
          small: string;
        };
        id: number;
        nickname: string;
        sign: string;
        user_group: number;
        username: string;
      };
      title: string;
      topicID: number;
      /** @description 查看 `./lib/notify.ts` _settings */
      type: number;
    };
    Permission: {
      subjectWikiEdit: boolean;
    };
    Reply: {
      createdAt: number;
      creator: components['schemas']['User'];
      id: number;
      isFriend: boolean;
      replies: components['schemas']['SubReply'][];
      state: number;
      text: string;
    };
    SubReply: {
      createdAt: number;
      creator: components['schemas']['User'];
      id: number;
      isFriend: boolean;
      state: number;
      text: string;
    };
    SubjectEdit: {
      date?: string;
      infobox: string;
      name: string;
      nsfw: boolean;
      platform: number;
      summary: string;
    };
    /** SubjectType */
    SubjectType: 1 | 2 | 3 | 4 | 6;
    SubjectWikiInfo: {
      availablePlatform: components['schemas']['WikiPlatform'][];
      id: number;
      infobox: string;
      name: string;
      nsfw: boolean;
      platform: number;
      summary: string;
      typeID: components['schemas']['SubjectType'];
    };
    /** Topic */
    Topic: {
      /** @description 发帖时间，unix time stamp in seconds */
      createdAt: number;
      /** User */
      creator: {
        /** Avatar */
        avatar: {
          large: string;
          medium: string;
          small: string;
        };
        id: number;
        nickname: string;
        sign: string;
        user_group: number;
        username: string;
      };
      /** @description topic id */
      id: number;
      /** @description 小组/条目ID */
      parentID: number;
      repliesCount: number;
      title: string;
      /** @description 最后回复时间，unix time stamp in seconds */
      updatedAt: number;
    };
    TopicCreation: {
      /** @description bbcode */
      text: string;
      title: string;
    };
    TopicDetail: {
      createdAt: number;
      creator: components['schemas']['User'];
      group: components['schemas']['Group'];
      id: number;
      replies: components['schemas']['Reply'][];
      state: number;
      text: string;
      title: string;
    };
    /** User */
    User: {
      /** Avatar */
      avatar: {
        large: string;
        medium: string;
        small: string;
      };
      id: number;
      nickname: string;
      sign: string;
      user_group: number;
      username: string;
    };
    /** @description request data validation error */
    ValidationError: {
      error: string;
      message: string;
      statusCode: number;
    };
    WikiPlatform: {
      id: number;
      text: string;
      wiki_tpl?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {
  clearNotice: {
    /**
     * 标记通知为已读
     * @description 标记通知为已读
     *
     * 不传id时会清空所有未读通知
     */
    requestBody?: {
      content: {
        'application/json': {
          id?: number[];
        };
      };
    };
    responses: {
      /** @description 没有返回值 */
      200: never;
      /** @description 未登录 */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getGroupPost: {
    parameters: {
      /** @example 2092074 */
      path: {
        postID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['GroupReply'];
        };
      };
      /** @description Default Response */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  editGroupPost: {
    parameters: {
      /** @example 2092074 */
      path: {
        postID: number;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "text": "new post contents"
         * }
         */
        'application/json': {
          text: string;
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  deleteGroupPost: {
    parameters: {
      /** @example 2092074 */
      path: {
        postID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Default Response */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getGroupTopicDetail: {
    /** @description 获取帖子列表 */
    parameters: {
      /** @example 371602 */
      path: {
        id: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['TopicDetail'];
        };
      };
      /** @description 小组不存在 */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  editGroupTopic: {
    parameters: {
      /** @example 371602 */
      path: {
        topicID: number;
      };
    };
    requestBody?: {
      content: {
        'application/json': components['schemas']['TopicCreation'];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description Default Response */
      400: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  createGroupReply: {
    parameters: {
      /** @example 371602 */
      path: {
        topicID: number;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          content: string;
          /**
           * @description 被回复的 topic ID, `0` 代表回复楼主
           * @default 0
           */
          replyTo?: number;
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['BasicReply'];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  listGroupMembersByName: {
    /** @description 获取帖子列表 */
    parameters: {
      query?: {
        type?: 'mod' | 'normal' | 'all';
        limit?: number;
        offset?: number;
      };
      path: {
        groupName: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            data: components['schemas']['GroupMember'][];
            total: number;
          };
        };
      };
      /** @description 小组不存在 */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getGroupProfile: {
    /** @description 获取小组首页 */
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        groupName: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['GroupProfile'];
        };
      };
      /** @description 小组不存在 */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getGroupTopicsByGroupName: {
    /** @description 获取帖子列表 */
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        groupName: string;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            data: components['schemas']['Topic'][];
            total: number;
          };
        };
      };
      /** @description 小组不存在 */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  createNewGroupTopic: {
    parameters: {
      /** @example sandbox */
      path: {
        groupName: string;
      };
    };
    requestBody?: {
      content: {
        'application/json': components['schemas']['TopicCreation'];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            /** @description new topic id */
            id: number;
          };
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  login: {
    /**
     * @description 需要 [turnstile](https://developers.cloudflare.com/turnstile/get-started/client-side-rendering/)
     *
     * next.bgm.tv 域名对应的 site-key 为 `0x4AAAAAAABkMYinukE8nzYS`
     *
     * dev.bgm38.com 域名使用测试用的 site-key `1x00000000000000000000AA`
     */
    requestBody?: {
      content: {
        'application/json': components['schemas']['LoginRequestBody'];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        headers: {
          /** @description example: "chiiNextSessionID=12345abc" */
          'Set-Cookie'?: string;
        };
        content: {
          'application/json': components['schemas']['User'];
        };
      };
      /** @description Default Response */
      400: {
        content: {
          'application/json': components['schemas']['ValidationError'];
        };
      };
      /** @description 验证码错误/账号密码不匹配 */
      401: {
        headers: {
          /** @description total limit per 10 minutes */
          'X-RateLimit-Limit'?: number;
          /** @description remaining rate limit */
          'X-RateLimit-Remaining'?: number;
          /** @description seconds to reset rate limit */
          'X-RateLimit-Reset'?: number;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 失败次数太多，需要过一段时间再重试 */
      429: {
        headers: {
          /** @description limit per 10 minutes */
          'X-RateLimit-Limit'?: number;
          /** @description remaining rate limit */
          'X-RateLimit-Remaining'?: number;
          /** @description seconds to reset rate limit */
          'X-RateLimit-Reset'?: number;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  login2: {
    /**
     * @deprecated
     * @description backward compatibility for #login operator
     */
    requestBody?: {
      content: {
        'application/json': components['schemas']['LoginRequestBody'];
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        headers: {
          'Set-Cookie'?: string;
        };
        content: {
          'application/json': components['schemas']['User'];
        };
      };
      /** @description Default Response */
      400: {
        content: {
          'application/json': components['schemas']['ValidationError'];
        };
      };
      /** @description 验证码错误/账号密码不匹配 */
      401: {
        headers: {
          'X-RateLimit-Limit'?: number;
          'X-RateLimit-Remaining'?: number;
          'X-RateLimit-Reset'?: number;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 失败次数太多，需要过一段时间再重试 */
      429: {
        headers: {
          'X-RateLimit-Limit'?: number;
          'X-RateLimit-Remaining'?: number;
          'X-RateLimit-Reset'?: number;
        };
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  logout: {
    /** @description 登出 */
    requestBody?: {
      content: {
        'application/json': Record<string, never>;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description 未登录 */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getCurrentUser: {
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['CurrentUser'];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  listNotice: {
    /** 获取未读通知 */
    parameters?: {
      query?: {
        limit?: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            data: components['schemas']['Notice'][];
            total: number;
          };
        };
      };
      /** @description 未登录 */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  getSubjectTopicsBySubjectId: {
    /** @description 获取帖子列表 */
    parameters: {
      query?: {
        limit?: number;
        offset?: number;
      };
      path: {
        subjectID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            data: components['schemas']['Topic'][];
            total: number;
          };
        };
      };
      /** @description 条目不存在 */
      404: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  subjectInfo: {
    /**
     * @description 获取当前的 wiki 信息
     *
     * 暂时只能修改沙盒条目 184017, 309445, 354667, 354677, 363612
     */
    parameters: {
      /** @example 363612 */
      path: {
        subjectID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['SubjectWikiInfo'];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  putSubjectInfo: {
    /**
     * @description 暂时只能修改沙盒条目 184017,309445,354667,354677,363612
     *
     * 需要 `subjectWikiEdit` 权限
     */
    parameters: {
      /** @example 363612 */
      path: {
        subjectID: number;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "commitMessage": "修正笔误",
         *   "subject": {
         *     "infobox": "{{Infobox animanga/TVAnime\n|中文名= 沙盒\n|别名={\n}\n|话数= 7\n|放送开始= 0000-10-06\n|放送星期= \n|官方网站= \n|播放电视台= \n|其他电视台= \n|播放结束= \n|其他= \n|Copyright= \n|平台={\n[龟壳]\n[Xbox Series S]\n[Xbox Series X]\n[Xbox Series X/S]\n[PC]\n[Xbox Series X|S]\n}\n}}",
         *     "name": "沙盒",
         *     "nsfw": false,
         *     "platform": 0,
         *     "summary": "本条目是一个沙盒，可以用于尝试bgm功能。\n\n普通维基人可以随意编辑条目信息以及相关关联查看编辑效果，但是请不要完全删除沙盒说明并且不要关联非沙盒条目/人物/角色。\n\nhttps://bgm.tv/group/topic/366812#post_1923517"
         *   }
         * }
         */
        'application/json': {
          commitMessage: string;
          subject: components['schemas']['SubjectEdit'];
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  patchSubjectInfo: {
    /** @description 暂时只能修改沙盒条目 184017,309445,354667,354677,363612 */
    parameters: {
      /** @example 363612 */
      path: {
        subjectID: number;
      };
    };
    requestBody: {
      content: {
        /**
         * @example {
         *   "commitMessage": "修正笔误",
         *   "subject": {
         *     "infobox": "{{Infobox animanga/TVAnime\n|中文名= 沙盒\n|别名={\n}\n|话数= 7\n|放送开始= 0000-10-06\n|放送星期= \n|官方网站= \n|播放电视台= \n|其他电视台= \n|播放结束= \n|其他= \n|Copyright= \n|平台={\n[龟壳]\n[Xbox Series S]\n[Xbox Series X]\n[Xbox Series X/S]\n[PC]\n[Xbox Series X|S]\n}\n}}"
         *   }
         * }
         */
        'application/json': {
          commitMessage: string;
          subject: {
            date?: string;
            infobox?: string;
            name?: string;
            nsfw?: boolean;
            platform?: number;
            summary?: string;
          };
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: never;
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  listSubjectCovers: {
    parameters: {
      /** @example 184017 */
      path: {
        subjectID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': {
            covers: {
              /** User */
              creator: {
                /** Avatar */
                avatar: {
                  large: string;
                  medium: string;
                  small: string;
                };
                id: number;
                nickname: string;
                sign: string;
                user_group: number;
                username: string;
              };
              id: number;
              raw: string;
              thumbnail: string;
              voted: boolean;
            }[];
            current?: {
              raw: string;
              thumbnail: string;
            };
          };
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  uploadSubjectCover: {
    /** @description 需要 `subjectWikiEdit` 权限 */
    parameters: {
      path: {
        subjectID: number;
      };
    };
    requestBody: {
      content: {
        'application/json': {
          /**
           * Format: byte
           * @description base64 encoded raw bytes, 4mb size limit on **decoded** size
           */
          content: string;
        };
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description Default Response */
      400: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  voteSubjectCover: {
    /**
     * 为条目封面投票
     * @description 需要 `subjectWikiEdit` 权限
     */
    parameters: {
      path: {
        subjectID: number;
        imageID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  unvoteSubjectCover: {
    /**
     * 撤消条目封面投票
     * @description 需要 `subjectWikiEdit` 权限
     */
    parameters: {
      path: {
        subjectID: number;
        imageID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': Record<string, never>;
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
  subjectEditHistorySummary: {
    /**
     * @description 获取当前的 wiki 信息
     *
     * 暂时只能修改沙盒条目 184017, 309445, 354667, 354677, 363612
     */
    parameters: {
      /** @example 8 */
      path: {
        subjectID: number;
      };
    };
    responses: {
      /** @description Default Response */
      200: {
        content: {
          'application/json': components['schemas']['HistorySummary'][];
        };
      };
      /** @description Default Response */
      401: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
      /** @description 意料之外的服务器错误 */
      500: {
        content: {
          'application/json': components['schemas']['Error'];
        };
      };
    };
  };
}
